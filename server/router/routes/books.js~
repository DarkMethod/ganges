var express = require('express');
var router = express.Router();
var models = require('../../models/index');

router.get('/', function(request, response, next) {
	models.Book.findAll({}).then(function(books) {
        var data = {
            error: "false",
            data: books
        };

        response.send(data);
        next();
    });
});

router.get('/:id', function(request, response, next) {
	models.Book.find({
        where: {
            'uuid': request.params.id
        }
    }).then(function(book) {
        var data = {
            error: "false",
            data: book
        };

        response.send(data);
        next();
    });
});

router.post('/', function(request, response, next) {
	models.Book.create({
        title: request.params['title'],
        author: request.params['author'],
        genre: request.params['genre'],
        price: request.params['price'],
        rating: request.params['rating'],
        availabiltiy: request.params['availability']
    }).then(function(book) {
        var data = {
            error: "false",
            message: "New book saved successfully",
            data: book
        };

        response.send(data);
        next();
    });
});

router.put('/:id', function(request, response, next) {
	models.Book.find({
        where: {
            'uuid': request.params.id
        }
    }).then(function(book) {
        if(book){
            book.updateAttributes({
                title: request.params['title'],
                author: request.params['author'],
                genre: request.params['genre'],
                price: request.params['price'],
                rating: request.params['rating'],
                availability: request.params['availability']
            }).then(function(book) {
                var data = {
                    error: "false",
                    message: "Updated book details successfully",
                    data: book
                };

                response.send(data);
                next();
            });
        }
    });
});


router.delete('/:id', function(request, response, next) {
	models.Book.destroy({
        where: {
            uuid: request.params['id']
        }
    }).then(function(book) {
        var data = {
            error: "false",
            message: "Deleted book successfully",
            data: book
        };

        response.send(data);
        next();
    });
});

module.exports = router;

